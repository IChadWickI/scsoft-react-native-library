{"version":3,"sources":["passport_model.ts"],"names":["PassportModel","fromMap","map","constructor","Object","keys","forEach","key","reduce","acc"],"mappings":";;;;;;;;;AAAA;AA8BE;AACO,MAAMA,aAAN,CAAoB;AACX,SAAPC,OAAO,CAACC,GAAD,EAAuC;AACnD,WAAO,IAAIF,aAAJ,CAAkBE,GAAlB,CAAP;AACD;;AA4BDC,EAAAA,WAAW,GAA6B;AAAA,QAA5BD,GAA4B,uEAAJ,EAAI;;AAAA,qCA3BtB,EA2BsB;;AAAA,qCA1BtB,EA0BsB;;AAAA,sCAzBrB,EAyBqB;;AAAA,yCAxBlB,EAwBkB;;AAAA,kCAvBzB,EAuByB;;AAAA,qCAtBtB,EAsBsB;;AAAA,4CArBf,EAqBe;;AAAA,oCApBvB,EAoBuB;;AAAA,uCAnBpB,EAmBoB;;AAAA,wCAlBnB,EAkBmB;;AAAA,0CAjBjB,EAiBiB;;AAAA,yCAhBlB,EAgBkB;;AAAA,6CAfd,EAec;;AAAA,6CAdd,EAcc;;AAAA,iDAbV,EAaU;;AAAA,6CAZd,EAYc;;AAAA,4CAXf,EAWe;;AAAA,gDAVX,EAUW;;AAAA,6CATd,EASc;;AAAA,0CARjB,EAQiB;;AAAA,6CAPd,EAOc;;AAAA,6CANd,EAMc;;AAAA,wCALnB,EAKmB;;AAAA,gDAJX,EAIW;;AAAA,uCAHpB,EAGoB;;AAAA,mCAFxB,EAEwB;;AACtCE,IAAAA,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiBI,OAAjB,CAA0BC,GAAD,IAAS;AAAA;;AAChC;AACA,WAAKA,GAAL,gBAAYL,GAAG,CAACK,GAAD,CAAf,+CAAwB,KAAKA,GAAL,CAAxB;AACD,KAHD;AAID,GApCwB,CAsCzB;;;AACO,MAAHL,GAAG,GAAqB;AAC1B,WAAOE,MAAM,CAACC,IAAP,CAAY,IAAZ,EAAkBG,MAAlB,CAAyB,CAACC,GAAD,EAAMF,GAAN,KAAc;AAC5C;AACAE,MAAAA,GAAG,CAACF,GAAD,CAAH,GAAW,KAAKA,GAAL,CAAX;AACA,aAAOE,GAAP;AACD,KAJM,EAIJ,EAJI,CAAP;AAKD;;AA7CwB","sourcesContent":["// PassportModel için TypeScript interface tanımı\nexport interface PassportModelMap {\n  docType?: string;\n  mrzText?: string;\n  fullName?: string;\n  certificate?: string;\n  name?: string;\n  surname?: string;\n  personalNumber?: string;\n  gender?: string;\n  birthDate?: string;\n  expiryDate?: string;\n  serialNumber?: string;\n  nationality?: string;\n  issuerAuthority?: string;\n  faceImageBase64?: string;\n  portraitImageBase64?: string;\n  signatureBase64?: string;\n  documentNumber?: string;\n  custodyInformation?: string;\n  fullDateOfBirth?: string;\n  nameOfHolder?: string;\n  personalNumber2?: string;\n  personalSummary?: string;\n  profession?: string;\n  proofOfCitizenship?: string;\n  telephone?: string;\n  title?: string;\n  }\n  \n  // PassportModel sınıfı tanımı\n  export class PassportModel {\n    static fromMap(map: PassportModelMap): PassportModel {\n      return new PassportModel(map);\n    }\n    docType: string = \"\";\n    mrzText: string = \"\";\n    fullName: string = \"\";\n    certificate: string = \"\";\n    name: string = \"\";\n    surname: string = \"\";\n    personalNumber: string = \"\";\n    gender: string = \"\";\n    birthDate: string = \"\";\n    expiryDate: string = \"\";\n    serialNumber: string = \"\";\n    nationality: string = \"\";\n    issuerAuthority: string = \"\";\n    faceImageBase64: string = \"\";\n    portraitImageBase64: string = \"\";\n    signatureBase64: string = \"\";\n    documentNumber: string = \"\";\n    custodyInformation: string = \"\";\n    fullDateOfBirth: string = \"\";\n    nameOfHolder: string = \"\";\n    personalNumber2: string = \"\";\n    personalSummary: string = \"\";\n    profession: string = \"\";\n    proofOfCitizenship: string = \"\";\n    telephone: string = \"\";\n    title: string = \"\";\n  \n    constructor(map: PassportModelMap = {}) {\n      Object.keys(map).forEach((key) => {\n        // @ts-expect-error Ignore the unreachable code error\n        this[key] = map[key] ?? this[key];\n      });\n    }\n  \n    // Sınıfın özelliklerini bir obje olarak dışarı aktaran bir metot\n    get map(): PassportModelMap {\n      return Object.keys(this).reduce((acc, key) => {\n        // @ts-expect-error Ignore the unreachable code error\n        acc[key] = this[key];\n        return acc;\n      }, {} as PassportModelMap);\n    }\n  }\n  "]}